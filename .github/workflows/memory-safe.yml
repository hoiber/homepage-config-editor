name: Memory Safe Build

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: homepage-config-gui
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Free up disk space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        df -h

    - name: Setup Node.js with smaller cache
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Configure npm for low memory
      run: |
        npm config set fund false
        npm config set audit false
        npm config set maxsockets 1
        npm config set fetch-retries 3
        npm config set fetch-timeout 300000

    - name: Install dependencies with memory limit
      run: |
        NODE_OPTIONS="--max_old_space_size=1536" npm install --prefer-offline
        npm cache clean --force

    - name: Build with memory limit
      run: NODE_OPTIONS="--max_old_space_size=1536" npm run build

    - name: Verify build output
      run: ls -la build/

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: hoiber
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./homepage-config-gui
        push: true
        platforms: linux/amd64
        tags: |
          hoiber/homepage-config-editor:latest
          hoiber/homepage-config-editor:static
        file-inline: |
          FROM nginx:alpine
          COPY build /usr/share/nginx/html
          COPY nginx.conf /etc/nginx/nginx.conf
          EXPOSE 80
          CMD ["nginx", "-g", "daemon off;"]